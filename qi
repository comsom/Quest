#!/usr/bin/ruby

# desc: Quest の対話環境

# qi :abbrev: Quest interactive

# usage: ./qi

#---------------------------------------------------
# 他の file から必要なものをとってくる。

require 'evaluator'

#---------------------------------------------------
# 文字列を Quest コードとして実行するメソッド

def code_eval(code)
  tokenseq = match_action(code, PAIRS)
  # puts('match_action #=> ' + tokenseq.inspect)
  
  tokenseq = eliminate(tokenseq)
  # puts('eliminate #=> ' + tokenseq.inspect)
  
  pterm = the_completed_pterm( parse( tokenseq ) )
  if pterm.is_a?(QError)
    puts(pterm.inspect)
  else
    sexps = rule_action(pterm, RA_PAIRS)
    sexps.each{|sexp|
      # puts(sexp.inspect)
      puts(s_eval(sexp,SP_TOPLEVEL).inspect)
    }
  end
end



#---------------------------------------------------
# 対話する。

w = 60
q = '#quit'
puts('qi : Quest interactive'.center(w))
puts("Type '#{q}' when you want to exit.".center(w))

loop do
  print('> ')
  code = gets.chomp
  case code
  when q
    break
  when /^ \s* $/x
    puts(QError.new("Error : empty string can't be evaluated.").inspect)
  else
    code_eval(code)
  end
end

puts('bye.')

